package de.cme;

import de.cme.dijkstra.test.TestingThread;
import java.awt.Color;
import java.util.IllegalFormatConversionException;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Pascal
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    private Steuerung dieSteuerung;
    private int modulNr;

    public GUI() {
        initComponents();
        dieSteuerung = new Steuerung(this);
        jBAktualisierenActionPerformed(null); //Ports suchen und anzeigen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPCOMPort = new javax.swing.JPanel();
        jLCOMPort = new javax.swing.JLabel();
        jCBCOMPort = new javax.swing.JComboBox();
        jBAktualisieren = new javax.swing.JButton();
        jBOeffnen = new javax.swing.JButton();
        jPLok = new javax.swing.JPanel();
        jLAdresse = new javax.swing.JLabel();
        jSAdresse = new javax.swing.JSpinner();
        jPSteuern = new javax.swing.JPanel();
        jTBSteuern = new javax.swing.JToggleButton();
        jBStopp = new javax.swing.JButton();
        jTGLokLichtFunktion = new javax.swing.JToggleButton();
        jBRichtungAendern = new javax.swing.JButton();
        jPRegler = new javax.swing.JPanel();
        jSGeschwindigkeit = new javax.swing.JSlider();
        jPBeenden = new javax.swing.JPanel();
        jBBeenden = new javax.swing.JButton();
        jBTrennen = new javax.swing.JButton();
        jPWeiche = new javax.swing.JPanel();
        jLWeichen = new javax.swing.JLabel();
        jLWeichenModulAuswahl = new javax.swing.JLabel();
        jCBWeichenChefAuswahl = new javax.swing.JComboBox();
        jLWeiche1 = new javax.swing.JLabel();
        jBWeiche1Rund = new javax.swing.JButton();
        jBWeiche1Gerade = new javax.swing.JButton();
        jBWeiche1Position = new javax.swing.JButton();
        jLWeiche2 = new javax.swing.JLabel();
        jBWeiche2Rund = new javax.swing.JButton();
        jBWeiche2Gerade = new javax.swing.JButton();
        jBWeiche2Position = new javax.swing.JButton();
        jLWeiche3 = new javax.swing.JLabel();
        jBWeiche3Rund = new javax.swing.JButton();
        jBWeiche3Gerade = new javax.swing.JButton();
        jBWeiche3Position = new javax.swing.JButton();
        jLWeiche4 = new javax.swing.JLabel();
        jBWeiche4Rund = new javax.swing.JButton();
        jBWeiche4Gerade = new javax.swing.JButton();
        jBWeiche4Position = new javax.swing.JButton();
        jBWeichenPosition = new javax.swing.JButton();
        jPRMK = new javax.swing.JPanel();
        jLRMK = new javax.swing.JLabel();
        jLRMKModulAuswahl = new javax.swing.JLabel();
        jCBRMKModulAuswahl = new javax.swing.JComboBox();
        jLEingang1 = new javax.swing.JLabel();
        jLEingang = new javax.swing.JLabel();
        jLEingang2 = new javax.swing.JLabel();
        jLEingang3 = new javax.swing.JLabel();
        jLEingang4 = new javax.swing.JLabel();
        jLEingang5 = new javax.swing.JLabel();
        jLEingang6 = new javax.swing.JLabel();
        jLEingang7 = new javax.swing.JLabel();
        jLEingang8 = new javax.swing.JLabel();
        jLStatus = new javax.swing.JLabel();
        jTFStatus0 = new javax.swing.JTextField();
        jTFStatus1 = new javax.swing.JTextField();
        jTFStatus2 = new javax.swing.JTextField();
        jTFStatus3 = new javax.swing.JTextField();
        jTFStatus4 = new javax.swing.JTextField();
        jTFStatus5 = new javax.swing.JTextField();
        jTFStatus6 = new javax.swing.JTextField();
        jTFStatus7 = new javax.swing.JTextField();
        jBRMKabfragen = new javax.swing.JButton();
        jPFahrAutomatik = new javax.swing.JPanel();
        jLStreckeWaehlen = new javax.swing.JLabel();
        jLVon = new javax.swing.JLabel();
        jTFVon = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTFBis = new javax.swing.JTextField();
        jBTestOneWay = new javax.swing.JButton();
        jBAutomatikStarten = new javax.swing.JButton();
        jBTestAllNondes = new javax.swing.JButton();
        jBSperreWeg = new javax.swing.JButton();
        jBWeicheRund = new javax.swing.JButton();
        jBWeicheGerade = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CME");
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        jPCOMPort.setBorder(javax.swing.BorderFactory.createTitledBorder("Port Einstellungen"));
        jPCOMPort.setPreferredSize(new java.awt.Dimension(200, 100));

        jLCOMPort.setText("COM-Port:");

        jBAktualisieren.setText("Aktualisieren");
        jBAktualisieren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAktualisierenActionPerformed(evt);
            }
        });

        jBOeffnen.setText("Ã–ffnen");
        jBOeffnen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOeffnenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPCOMPortLayout = new javax.swing.GroupLayout(jPCOMPort);
        jPCOMPort.setLayout(jPCOMPortLayout);
        jPCOMPortLayout.setHorizontalGroup(
            jPCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCOMPortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBCOMPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLCOMPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBOeffnen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBAktualisieren, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPCOMPortLayout.setVerticalGroup(
            jPCOMPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCOMPortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCOMPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBCOMPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBOeffnen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBAktualisieren)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPCOMPort);
        jPCOMPort.setBounds(10, 11, 140, 180);

        jPLok.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLAdresse.setText("Lok Adresse:");

        jSAdresse.setModel(new javax.swing.SpinnerNumberModel(0, 0, 32, 1));
        jSAdresse.setToolTipText("");
        jSAdresse.setInheritsPopupMenu(true);
        jSAdresse.setOpaque(false);
        jSAdresse.setValue(24);
        jSAdresse.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSAdresseStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPLokLayout = new javax.swing.GroupLayout(jPLok);
        jPLok.setLayout(jPLokLayout);
        jPLokLayout.setHorizontalGroup(
            jPLokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLokLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPLokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLAdresse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSAdresse))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPLokLayout.setVerticalGroup(
            jPLokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLokLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLAdresse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        getContentPane().add(jPLok);
        jPLok.setBounds(170, 20, 94, 130);

        jPSteuern.setBorder(javax.swing.BorderFactory.createTitledBorder("Lok Steuerung"));

        jTBSteuern.setText("GO");
        jTBSteuern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBSteuernActionPerformed(evt);
            }
        });

        jBStopp.setBackground(new java.awt.Color(255, 0, 51));
        jBStopp.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jBStopp.setText("STOPP");
        jBStopp.setPreferredSize(new java.awt.Dimension(100, 40));
        jBStopp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStoppActionPerformed(evt);
            }
        });

        jTGLokLichtFunktion.setText("Licht ein");
        jTGLokLichtFunktion.setPreferredSize(new java.awt.Dimension(100, 23));
        jTGLokLichtFunktion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTGLokLichtFunktionActionPerformed(evt);
            }
        });

        jBRichtungAendern.setText("Richtung Ã¤ndern");
        jBRichtungAendern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRichtungAendernActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPSteuernLayout = new javax.swing.GroupLayout(jPSteuern);
        jPSteuern.setLayout(jPSteuernLayout);
        jPSteuernLayout.setHorizontalGroup(
            jPSteuernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSteuernLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSteuernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPSteuernLayout.createSequentialGroup()
                        .addComponent(jTBSteuern, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBStopp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPSteuernLayout.createSequentialGroup()
                        .addComponent(jTGLokLichtFunktion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBRichtungAendern, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))))
        );
        jPSteuernLayout.setVerticalGroup(
            jPSteuernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSteuernLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSteuernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBStopp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTBSteuern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPSteuernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTGLokLichtFunktion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBRichtungAendern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPSteuern);
        jPSteuern.setBounds(10, 200, 250, 140);

        jPRegler.setBorder(javax.swing.BorderFactory.createTitledBorder("Geschwindigkeit"));

        jSGeschwindigkeit.setOrientation(javax.swing.JSlider.VERTICAL);
        jSGeschwindigkeit.setValue(0);
        jSGeschwindigkeit.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSGeschwindigkeitStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPReglerLayout = new javax.swing.GroupLayout(jPRegler);
        jPRegler.setLayout(jPReglerLayout);
        jPReglerLayout.setHorizontalGroup(
            jPReglerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReglerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSGeschwindigkeit, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPReglerLayout.setVerticalGroup(
            jPReglerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPReglerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSGeschwindigkeit, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPRegler);
        jPRegler.setBounds(290, 10, 100, 300);

        jBBeenden.setText("Beenden");
        jBBeenden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBeendenActionPerformed(evt);
            }
        });

        jBTrennen.setText("Verbindung trennen");
        jBTrennen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTrennenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBeendenLayout = new javax.swing.GroupLayout(jPBeenden);
        jPBeenden.setLayout(jPBeendenLayout);
        jPBeendenLayout.setHorizontalGroup(
            jPBeendenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBeendenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBeendenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBBeenden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTrennen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPBeendenLayout.setVerticalGroup(
            jPBeendenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPBeendenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBTrennen, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jBBeenden)
                .addContainerGap())
        );

        getContentPane().add(jPBeenden);
        jPBeenden.setBounds(30, 380, 154, 100);

        jPWeiche.setBorder(javax.swing.BorderFactory.createTitledBorder("Weichen Einstellungen"));

        jLWeichen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLWeichen.setText("Weichen");

        jLWeichenModulAuswahl.setText("Weichenmodul auswÃ¤hlen:");

        jCBWeichenChefAuswahl.addItem(1);
        jCBWeichenChefAuswahl.addItem(2);
        jCBWeichenChefAuswahl.addItem(3);
        jCBWeichenChefAuswahl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "5", "6" }));
        jCBWeichenChefAuswahl.setToolTipText("Adresse des WeichenChef-Moduls auswÃ¤hlen");
        jCBWeichenChefAuswahl.setName(""); // NOI18N
        jCBWeichenChefAuswahl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBWeichenChefAuswahlActionPerformed(evt);
            }
        });

        jLWeiche1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLWeiche1.setText("Weiche 1");

        jBWeiche1Rund.setBackground(new java.awt.Color(255, 0, 0));
        jBWeiche1Rund.setText("rund");
        jBWeiche1Rund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche1RundActionPerformed(evt);
            }
        });

        jBWeiche1Gerade.setBackground(new java.awt.Color(0, 204, 0));
        jBWeiche1Gerade.setText("gerade");
        jBWeiche1Gerade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche1GeradeActionPerformed(evt);
            }
        });

        jBWeiche1Position.setText("Position");
        jBWeiche1Position.setMaximumSize(new java.awt.Dimension(79, 23));
        jBWeiche1Position.setMinimumSize(new java.awt.Dimension(79, 23));
        jBWeiche1Position.setPreferredSize(new java.awt.Dimension(80, 23));

        jLWeiche2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLWeiche2.setText("Weiche 2");

        jBWeiche2Rund.setBackground(new java.awt.Color(255, 0, 0));
        jBWeiche2Rund.setText("rund");
        jBWeiche2Rund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche2RundActionPerformed(evt);
            }
        });

        jBWeiche2Gerade.setBackground(new java.awt.Color(0, 204, 0));
        jBWeiche2Gerade.setText("gerade");
        jBWeiche2Gerade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche2GeradeActionPerformed(evt);
            }
        });

        jBWeiche2Position.setText("Position");
        jBWeiche2Position.setPreferredSize(new java.awt.Dimension(80, 23));

        jLWeiche3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLWeiche3.setText("Weiche 3");

        jBWeiche3Rund.setBackground(new java.awt.Color(255, 0, 0));
        jBWeiche3Rund.setText("rund");
        jBWeiche3Rund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche3RundActionPerformed(evt);
            }
        });

        jBWeiche3Gerade.setBackground(new java.awt.Color(0, 204, 0));
        jBWeiche3Gerade.setText("gerade");
        jBWeiche3Gerade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche3GeradeActionPerformed(evt);
            }
        });

        jBWeiche3Position.setText("Position");
        jBWeiche3Position.setPreferredSize(new java.awt.Dimension(80, 23));

        jLWeiche4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLWeiche4.setText("Weiche 4");

        jBWeiche4Rund.setBackground(new java.awt.Color(255, 0, 0));
        jBWeiche4Rund.setText("rund");
        jBWeiche4Rund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche4RundActionPerformed(evt);
            }
        });

        jBWeiche4Gerade.setBackground(new java.awt.Color(0, 204, 0));
        jBWeiche4Gerade.setText("gerade");
        jBWeiche4Gerade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeiche4GeradeActionPerformed(evt);
            }
        });

        jBWeiche4Position.setText("Position");
        jBWeiche4Position.setPreferredSize(new java.awt.Dimension(80, 23));

        jBWeichenPosition.setText("Weichenposition");
        jBWeichenPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeichenPositionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPWeicheLayout = new javax.swing.GroupLayout(jPWeiche);
        jPWeiche.setLayout(jPWeicheLayout);
        jPWeicheLayout.setHorizontalGroup(
            jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPWeicheLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jLWeichenModulAuswahl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBWeichenChefAuswahl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBWeichenPosition)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(jPWeicheLayout.createSequentialGroup()
                .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLWeiche1)
                            .addComponent(jBWeiche1Rund, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche1Position, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche1Gerade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLWeiche2)
                            .addComponent(jBWeiche2Position, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche2Rund, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche2Gerade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLWeiche3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jBWeiche3Rund, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBWeiche3Position, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBWeiche3Gerade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLWeiche4)
                            .addComponent(jBWeiche4Rund, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche4Gerade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche4Position, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLWeichen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPWeicheLayout.setVerticalGroup(
            jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPWeicheLayout.createSequentialGroup()
                .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLWeiche3))
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jBWeiche4Rund))
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jBWeiche1Rund)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBWeiche1Gerade)
                            .addComponent(jBWeiche2Gerade)
                            .addComponent(jBWeiche3Gerade)
                            .addComponent(jBWeiche4Gerade)))
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBWeiche2Rund)
                            .addComponent(jBWeiche3Rund)))
                    .addGroup(jPWeicheLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLWeichen)
                        .addGap(5, 5, 5)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLWeichenModulAuswahl)
                            .addComponent(jCBWeichenChefAuswahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeichenPosition))
                        .addGap(27, 27, 27)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLWeiche1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLWeiche4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLWeiche2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(81, 81, 81)
                        .addGroup(jPWeicheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBWeiche1Position, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche2Position, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche3Position, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBWeiche4Position, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBWeiche1Position.getAccessibleContext().setAccessibleName("Position 1");

        getContentPane().add(jPWeiche);
        jPWeiche.setBounds(400, 40, 500, 270);

        jPRMK.setBorder(javax.swing.BorderFactory.createTitledBorder("RÃ¼ckmeldekontakt Einstellungen"));

        jLRMK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLRMK.setText("RÃ¼ckmeldekontakte");

        jLRMKModulAuswahl.setText("Weichenmodul auswÃ¤hlen:");

        jCBRMKModulAuswahl.addItem(1);
        jCBRMKModulAuswahl.addItem(2);
        jCBRMKModulAuswahl.addItem(3);
        jCBRMKModulAuswahl.addItem(4);
        jCBRMKModulAuswahl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        jCBRMKModulAuswahl.setToolTipText("Adresse des GleisReporter-Moduls auswÃ¤hlen");
        jCBRMKModulAuswahl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBRMKModulAuswahlActionPerformed(evt);
            }
        });

        jLEingang1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang1.setText("1");

        jLEingang.setText("Eingang:");

        jLEingang2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang2.setText("2");

        jLEingang3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang3.setText("3");

        jLEingang4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang4.setText("4");

        jLEingang5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang5.setText("5");

        jLEingang6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang6.setText("6");

        jLEingang7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang7.setText("7");

        jLEingang8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLEingang8.setText("8");

        jLStatus.setText("Status:");

        jTFStatus0.setEditable(false);

        jTFStatus1.setEditable(false);

        jTFStatus2.setEditable(false);

        jTFStatus3.setEditable(false);

        jTFStatus4.setEditable(false);

        jTFStatus5.setEditable(false);

        jTFStatus6.setEditable(false);

        jTFStatus7.setEditable(false);

        jBRMKabfragen.setText("RÃ¼ckmeldekontakt abfragen");
        jBRMKabfragen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRMKabfragenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPRMKLayout = new javax.swing.GroupLayout(jPRMK);
        jPRMK.setLayout(jPRMKLayout);
        jPRMKLayout.setHorizontalGroup(
            jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRMKLayout.createSequentialGroup()
                .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPRMKLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLEingang)
                            .addComponent(jLStatus))
                        .addGap(18, 18, 18)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang1)
                            .addComponent(jTFStatus0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang2)
                            .addComponent(jTFStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang3)
                            .addComponent(jTFStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang4)
                            .addComponent(jTFStatus3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang5)
                            .addComponent(jTFStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang6)
                            .addComponent(jTFStatus5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang7)
                            .addComponent(jTFStatus6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLEingang8)
                            .addComponent(jTFStatus7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPRMKLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLRMKModulAuswahl)
                        .addGap(18, 18, 18)
                        .addComponent(jCBRMKModulAuswahl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
            .addGroup(jPRMKLayout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLRMK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBRMKabfragen)
                .addGap(18, 18, 18))
        );
        jPRMKLayout.setVerticalGroup(
            jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRMKLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRMK)
                    .addComponent(jBRMKabfragen))
                .addGap(18, 18, 18)
                .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRMKModulAuswahl)
                    .addComponent(jCBRMKModulAuswahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEingang1)
                    .addComponent(jLEingang)
                    .addComponent(jLEingang2)
                    .addComponent(jLEingang3)
                    .addComponent(jLEingang4)
                    .addComponent(jLEingang5)
                    .addComponent(jLEingang6)
                    .addComponent(jLEingang7)
                    .addComponent(jLEingang8))
                .addGap(18, 18, 18)
                .addGroup(jPRMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStatus)
                    .addComponent(jTFStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFStatus0, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPRMK);
        jPRMK.setBounds(270, 330, 720, 200);

        jPFahrAutomatik.setBorder(javax.swing.BorderFactory.createTitledBorder("Automatisiertes Fahren"));

        jLStreckeWaehlen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLStreckeWaehlen.setText("Strecke wÃ¤hlen");

        jLVon.setText("Von:");

        jTFVon.setText("1");
        jTFVon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFVonFocusGained(evt);
            }
        });

        jLabel1.setText("Bis:");

        jTFBis.setText("8");
        jTFBis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFBisFocusGained(evt);
            }
        });

        jBTestOneWay.setText("Eingegebenen Weg testen");
        jBTestOneWay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTestOneWayActionPerformed(evt);
            }
        });

        jBAutomatikStarten.setText("Automatik starten");
        jBAutomatikStarten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAutomatikStartenActionPerformed(evt);
            }
        });

        jBTestAllNondes.setText("Alle Knoten testen");
        jBTestAllNondes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTestAllNondesActionPerformed(evt);
            }
        });

        jBSperreWeg.setText("Etwas in den Weg stellen");
        jBSperreWeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSperreWegActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPFahrAutomatikLayout = new javax.swing.GroupLayout(jPFahrAutomatik);
        jPFahrAutomatik.setLayout(jPFahrAutomatikLayout);
        jPFahrAutomatikLayout.setHorizontalGroup(
            jPFahrAutomatikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFahrAutomatikLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPFahrAutomatikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBTestOneWay, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(jBTestAllNondes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPFahrAutomatikLayout.createSequentialGroup()
                        .addGroup(jPFahrAutomatikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLStreckeWaehlen)
                            .addGroup(jPFahrAutomatikLayout.createSequentialGroup()
                                .addComponent(jLVon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTFVon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFBis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPFahrAutomatikLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jBAutomatikStarten)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jBSperreWeg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPFahrAutomatikLayout.setVerticalGroup(
            jPFahrAutomatikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFahrAutomatikLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLStreckeWaehlen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPFahrAutomatikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLVon)
                    .addComponent(jTFVon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTFBis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBAutomatikStarten)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jBSperreWeg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBTestOneWay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBTestAllNondes)
                .addGap(21, 21, 21))
        );

        getContentPane().add(jPFahrAutomatik);
        jPFahrAutomatik.setBounds(910, 40, 210, 250);

        jBWeicheRund.setText("Weiche rund");
        jBWeicheRund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeicheRundActionPerformed(evt);
            }
        });
        getContentPane().add(jBWeicheRund);
        jBWeicheRund.setBounds(1020, 310, 130, 23);

        jBWeicheGerade.setText("Weiche gerade");
        jBWeicheGerade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBWeicheGeradeActionPerformed(evt);
            }
        });
        getContentPane().add(jBWeicheGerade);
        jBWeicheGerade.setBounds(1020, 350, 130, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBeendenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBeendenActionPerformed
        //Warten, bis Lok bei Standard-Position (Knotennummer 1) angekommen ist
        //und dann erst beenden
        //Lok zu Standard-Position fahren (Knotennummer 1)
//        dieSteuerung.fahreZuStandardPosition();
//        if(dieSteuerung.isLokAufStandardPosition()) {
        dieSteuerung.schliessen();
//        }
    }//GEN-LAST:event_jBBeendenActionPerformed

    private void jBAktualisierenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAktualisierenActionPerformed
        jCBCOMPort.removeAllItems();
        List<String> comPorts = dieSteuerung.aktualisiereSerialPort();
        for (String port : comPorts) {
            jCBCOMPort.addItem(port);
        }
    }//GEN-LAST:event_jBAktualisierenActionPerformed

    private void jBTrennenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTrennenActionPerformed
        //Lok in Standard-Position fahren (Knotennummer 1)
//        dieSteuerung.fahreZuStandardPosition();
//        if(dieSteuerung.isLokAufStandardPosition()) {
        dieSteuerung.disconnect();
//        }
    }//GEN-LAST:event_jBTrennenActionPerformed

    private void jBOeffnenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOeffnenActionPerformed
        dieSteuerung.connect((String) jCBCOMPort.getSelectedItem());
    }//GEN-LAST:event_jBOeffnenActionPerformed

    private void jSGeschwindigkeitStateChanged(javax.swing.event.ChangeEvent evt) {
        System.out.println("Adresse: " + jSAdresse.getValue());
        try {
            dieSteuerung.setLokAdresse(Byte.parseByte(jSAdresse.getValue().toString())); //Lok-Adresse von der GUI einlesen und der Steuerung Ã¼bergeben
        } catch (IllegalFormatConversionException conversionException) {
            dieSteuerung.setLokAdresse(Steuerung.STANDARD_LOK_ADRESSE); //StandardmÃ¤ÃŸig Lok 24 wÃ¤hlen
            System.out.println("Adresse der Steuerung: " + dieSteuerung.getLokAdresse());
        }
        System.out.println("aktueller Wert vom Slider: " + jSGeschwindigkeit.getValue());
        dieSteuerung.fahreLok(jSGeschwindigkeit.getValue() * 10);
    }

    private void jTBSteuernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBSteuernActionPerformed
        if (jTBSteuern.isSelected()) {
            jTBSteuern.setText("HALT");
            //Lok fahren lassen
            dieSteuerung.einschaltenSystem(); //System einschalten
            dieSteuerung.fahreLok(jSGeschwindigkeit.getValue() * 10); //Lok mit aktueller Geschwindigkeit weiterfahren lassen
        } else {
            jTBSteuern.setText("GO");
            //Lok anhalten
            dieSteuerung.anhaltenSystem();
        }
    }//GEN-LAST:event_jTBSteuernActionPerformed

    private void jBWeiche1RundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche1RundActionPerformed
        //rot
        byte weichenAdresse = (byte) 0;
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 0);
    }//GEN-LAST:event_jBWeiche1RundActionPerformed

    private void jBWeiche2RundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche2RundActionPerformed
        //rot
        byte weichenAdresse = (byte) (1);
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 0);
    }//GEN-LAST:event_jBWeiche2RundActionPerformed

    private void jBWeiche3RundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche3RundActionPerformed
        //rot
        byte weichenAdresse = (byte) (2);
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 0);
    }//GEN-LAST:event_jBWeiche3RundActionPerformed

    private void jBWeiche4RundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche4RundActionPerformed
        //rot
        byte weichenAdresse = (byte) (3);
        findeModulNr();
//        dieSteuerung.stelleWeiche(44, 'r');
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 0);
    }//GEN-LAST:event_jBWeiche4RundActionPerformed

    private void jBWeiche1GeradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche1GeradeActionPerformed
        //grÃ¼n
        byte weichenAdresse = (byte) (0);
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 1);
    }//GEN-LAST:event_jBWeiche1GeradeActionPerformed

    private void jBWeiche2GeradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche2GeradeActionPerformed
        //grÃ¼n
        byte weichenAdresse = (byte) (1);
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 1);
    }//GEN-LAST:event_jBWeiche2GeradeActionPerformed

    private void jBWeiche3GeradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche3GeradeActionPerformed
        //grÃ¼n
        byte weichenAdresse = (byte) (2);
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 1);
        findeModulNr();
    }//GEN-LAST:event_jBWeiche3GeradeActionPerformed

    private void jBWeiche4GeradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeiche4GeradeActionPerformed
        //grÃ¼n
        byte weichenAdresse = (byte) (3);
        findeModulNr();
        dieSteuerung.stelleWeiche(modulNr, weichenAdresse, (byte) 1);
    }//GEN-LAST:event_jBWeiche4GeradeActionPerformed

    private void jCBRMKModulAuswahlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBRMKModulAuswahlActionPerformed
        JComboBox jCBModul = (JComboBox) evt.getSource();
        int auswahl;
        try {
            auswahl = Integer.parseInt(jCBModul.getSelectedItem().toString());
        } catch (IllegalFormatConversionException conversionException) {
            System.out.println("Fehler-Nachricht: " + conversionException.getMessage());
            System.out.println("RMK-Modul auswÃ¤hlen fehlgeschlagen!");
            auswahl = 1;
        }
        dieSteuerung.setGewRMKModul(auswahl);
        System.out.println("RMK-Modul: '" + auswahl + "' ausgewÃ¤hlt");
        dieSteuerung.sendeRMK();
    }//GEN-LAST:event_jCBRMKModulAuswahlActionPerformed

    private void jCBWeichenChefAuswahlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBWeichenChefAuswahlActionPerformed
        JComboBox jCBModul = ((JComboBox) evt.getSource());
        int auswahl;
        try {
            auswahl = Integer.parseInt(jCBModul.getSelectedItem().toString());
        } catch (IllegalFormatConversionException conversionException) {
            System.out.println("Fehler-Nachricht: " + conversionException.getMessage());
            System.out.println("WeichenChef-Modul auswÃ¤hlen fehlgeschlagen!");
            auswahl = 4;
        }
        dieSteuerung.setGewWeichenModul(auswahl);
        System.out.println("WeichenChef-Modul: '" + auswahl + "' ausgewÃ¤hlt");
        dieSteuerung.sendeRMK();
    }//GEN-LAST:event_jCBWeichenChefAuswahlActionPerformed

    private void jBStoppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStoppActionPerformed
        // Strom ausschalten
        dieSteuerung.stoppSystem();
    }//GEN-LAST:event_jBStoppActionPerformed

    private void jTGLokLichtFunktionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTGLokLichtFunktionActionPerformed
        if (jTGLokLichtFunktion.isSelected()) {
            jTGLokLichtFunktion.setText("Licht aus");
            jTGLokLichtFunktion.setBackground(Color.YELLOW);
            dieSteuerung.schalteLichtVonLok(true);
        } else {
            jTGLokLichtFunktion.setText("Licht ein");
            jTGLokLichtFunktion.setBackground(Color.GRAY);
            dieSteuerung.schalteLichtVonLok(false);
        }
    }//GEN-LAST:event_jTGLokLichtFunktionActionPerformed

    private void jSAdresseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSAdresseStateChanged
        dieSteuerung.setLokAdresse(jSAdresse.getValue().toString());
        //TO-DO: Aktuelle Geschwindigkeit setzen
        jSGeschwindigkeit.setValue(0); //
        System.out.println("Adresse gesetzt: " + jSAdresse.getValue().toString());
    }//GEN-LAST:event_jSAdresseStateChanged

    private void jBRMKabfragenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRMKabfragenActionPerformed
        dieSteuerung.sendeRMK();
    }//GEN-LAST:event_jBRMKabfragenActionPerformed
 
    private void jBTestOneWayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTestOneWayActionPerformed
        dieSteuerung.setStartPoint(getStartPoint());
        dieSteuerung.setEndPoint(getEndPoint());
        TestingThread testingThread = new TestingThread(dieSteuerung.getStartPoint(), dieSteuerung.getEndPoint());
        testingThread.start();
    }//GEN-LAST:event_jBTestOneWayActionPerformed

    private void jBRichtungAendernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRichtungAendernActionPerformed
        dieSteuerung.wechsleRichtung(Byte.parseByte(jSAdresse.getValue().toString()));
    }//GEN-LAST:event_jBRichtungAendernActionPerformed

    private void jBWeichenPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeichenPositionActionPerformed
        dieSteuerung.sendeWeichenPosition();
    }//GEN-LAST:event_jBWeichenPositionActionPerformed

    private int getStartPoint() {
        int vonKnoten;
        try {
            vonKnoten = Integer.valueOf(jTFVon.getText().trim());
        } catch (IllegalFormatConversionException ifce) {
            //Standard-Start-Knoten 1
            vonKnoten = 1;
            System.out.println("Falscher Start-Knotenwert");
        }
        return vonKnoten;
    }

    private int getEndPoint() {
        int bisKnoten;
        try {
            bisKnoten = Integer.valueOf(jTFBis.getText().trim());
        } catch (IllegalFormatConversionException ifce) {
            //Standard-End-Knoten 8
            bisKnoten = 8;
            System.out.println("Falscher End-Knotenwert");
        }
        return bisKnoten;
    }
    private void jBAutomatikStartenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAutomatikStartenActionPerformed
        int vonKnoten = getStartPoint();
        int bisKnoten = getEndPoint();
        
        //Auf Lokposition prÃ¼fen einschalten
        dieSteuerung.setAutomationEnabled(true);

        dieSteuerung.setStartPoint(vonKnoten);
        dieSteuerung.setEndPoint(bisKnoten);
        dieSteuerung.findeWeg();
        //Route nicht mÃ¶glich
        if(!dieSteuerung.isRouteWorking()) {
            //Warnhinweis zeigen
            JOptionPane.showMessageDialog(this, "Routenfindung nicht mÃ¶glich.\nBitte Hindernis entfernen oder anderen Endpunkt wÃ¤hlen!", "Routenfindung nicht mÃ¶glich!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBAutomatikStartenActionPerformed

    private void jBWeicheRundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeicheRundActionPerformed
        dieSteuerung.stelleWeiche(getStartPoint(), 'r');
    }//GEN-LAST:event_jBWeicheRundActionPerformed

    private void jBWeicheGeradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBWeicheGeradeActionPerformed
        dieSteuerung.stelleWeiche(getStartPoint(), 'g');
    }//GEN-LAST:event_jBWeicheGeradeActionPerformed

    private void jBTestAllNondesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTestAllNondesActionPerformed
        //Neuen TestThread erzeugen, der alle Knotenkombiantionen testet
        TestingThread testingThread;
        testingThread = new TestingThread();
        testingThread.start();
    }//GEN-LAST:event_jBTestAllNondesActionPerformed

    private void jTFVonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFVonFocusGained
        jTFVon.selectAll();
    }//GEN-LAST:event_jTFVonFocusGained

    private void jTFBisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFBisFocusGained
        jTFBis.selectAll();
    }//GEN-LAST:event_jTFBisFocusGained

    private void jBSperreWegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSperreWegActionPerformed
        int vonKnoten = Integer.valueOf(JOptionPane.showInputDialog(this, "Weg sperren von Knoten: ", "Weg sperren", JOptionPane.QUESTION_MESSAGE));
        int bisKnoten = Integer.valueOf(JOptionPane.showInputDialog(this, "bis Knoten: ", "Weg sperren", JOptionPane.QUESTION_MESSAGE));
        dieSteuerung.entferneKante(vonKnoten, bisKnoten);
    }//GEN-LAST:event_jBSperreWegActionPerformed

    public void positionRund(int nummer) {
        // int nummer: 1-4 (Nummer der Weiche)
        switch (nummer) {
            case 1:
                jBWeiche1Position.setBackground(Color.RED);
                jBWeiche1Position.setText("Rund");
                break;
            case 2:
                jBWeiche2Position.setBackground(Color.RED);
                jBWeiche2Position.setText("Rund");
                break;
            case 3:
                jBWeiche3Position.setBackground(Color.RED);
                jBWeiche3Position.setText("Rund");
                break;
            case 4:
                jBWeiche4Position.setBackground(Color.RED);
                jBWeiche4Position.setText("Rund");
                break;
            default:
                break;
        }
    }

    public void positionGerade(int nummer) {
        // int nummer: 1-4 (Nummer der Weiche)
        switch (nummer) {
            case 1:
                jBWeiche1Position.setBackground(Color.GREEN);
                jBWeiche1Position.setText("Gerade");
                break;
            case 2:
                jBWeiche2Position.setBackground(Color.GREEN);
                jBWeiche2Position.setText("Gerade");
                break;
            case 3:
                jBWeiche3Position.setBackground(Color.GREEN);
                jBWeiche3Position.setText("Gerade");
                break;
            case 4:
                jBWeiche4Position.setBackground(Color.GREEN);
                jBWeiche4Position.setText("Gerade");
                break;
            default:
                break;
        }
    }

    public void positionFehler(int nummer) {
        // int nummer: 1-4 (Nummer der Weiche)
        switch (nummer) {
            case 1:
                jBWeiche1Position.setBackground(Color.YELLOW);
                jBWeiche1Position.setText("Fehler");
                break;
            case 2:
                jBWeiche2Position.setBackground(Color.YELLOW);
                jBWeiche2Position.setText("Fehler");
                break;
            case 3:
                jBWeiche3Position.setBackground(Color.YELLOW);
                jBWeiche3Position.setText("Fehler");
                break;
            case 4:
                jBWeiche4Position.setBackground(Color.YELLOW);
                jBWeiche4Position.setText("Fehler");
                break;
            default:
                break;
        }
    }

    public void setzeRMKStatus(int nummer, boolean status) {
        /**
         * int nummer: 1-8 (Nummer, um den Eingang des Moduls anzusprechen)
         * boolean status: true=frei, false=belegt
         */

        /* funktioniert nur, wenn Status-TextFields in einem Array gespeichert werden.
         boolean nummern[] = new boolean[8];
         for (int i = 0; i < 8; i++) {
         if (nummern[i]) {
         jTFStatus[i].setText("frei");
         jTFStatus1.setBackground(Color.GREEN);
         } else {
         jTFStatus1.setText("belegt");
         jTFStatus1.setBackground(Color.RED);
         }
         }
         */
        switch (nummer) {
            case 0:
                System.out.println("TF-Status0 aufgerufen");
                if (status) {
                    jTFStatus0.setText("frei");
                    jTFStatus0.setBackground(Color.GREEN);
                } else {
                    jTFStatus0.setText("belegt");
                    jTFStatus0.setBackground(Color.RED);
                }
                break;
            case 1:
                if (status) {
                    jTFStatus1.setText("frei");
                    jTFStatus1.setBackground(Color.GREEN);
                } else {
                    jTFStatus1.setText("belegt");
                    jTFStatus1.setBackground(Color.RED);
                }
                break;
            case 2:
                if (status) {
                    jTFStatus2.setText("frei");
                    jTFStatus2.setBackground(Color.GREEN);
                } else {
                    jTFStatus2.setText("belegt");
                    jTFStatus2.setBackground(Color.RED);
                }
                break;
            case 3:
                if (status) {
                    jTFStatus3.setText("frei");
                    jTFStatus3.setBackground(Color.GREEN);
                } else {
                    jTFStatus3.setText("belegt");
                    jTFStatus3.setBackground(Color.RED);
                }
                break;
            case 4:
                if (status) {
                    jTFStatus4.setText("frei");
                    jTFStatus4.setBackground(Color.GREEN);
                } else {
                    jTFStatus4.setText("belegt");
                    jTFStatus4.setBackground(Color.RED);
                }
                break;
            case 5:
                if (status) {
                    jTFStatus5.setText("frei");
                    jTFStatus5.setBackground(Color.GREEN);
                } else {
                    jTFStatus5.setText("belegt");
                    jTFStatus5.setBackground(Color.RED);
                }
                break;
            case 6:
                if (status) {
                    jTFStatus6.setText("frei");
                    jTFStatus6.setBackground(Color.GREEN);
                } else {
                    jTFStatus6.setText("belegt");
                    jTFStatus6.setBackground(Color.RED);
                }
                break;
            case 7:
                if (status) {
                    jTFStatus7.setText("frei");
                    jTFStatus7.setBackground(Color.GREEN);
                } else {
                    jTFStatus7.setText("belegt");
                    jTFStatus7.setBackground(Color.RED);
                }
                break;
            default:
                System.out.println("Falsche Eingangsnummer des RMK-Moduls");
                break;
        }
    }

    public void setzeRMKEingangNr(int nummer, int wert) {
        switch (nummer) {
            case 1:
                jLEingang1.setText(String.valueOf(wert));
                break;
            case 2:
                jLEingang2.setText(String.valueOf(wert));
                break;
            case 3:
                jLEingang3.setText(String.valueOf(wert));
                break;
            case 4:
                jLEingang4.setText(String.valueOf(wert));
                break;
            case 5:
                jLEingang5.setText(String.valueOf(wert));
                break;
            case 6:
                jLEingang6.setText(String.valueOf(wert));
                break;
            case 7:
                jLEingang7.setText(String.valueOf(wert));
                break;
            case 8:
                jLEingang8.setText(String.valueOf(wert));
                break;
            default:
                System.out.println("UngÃ¼ltige Eingangsnummer des RMKs");
                break;
        }
    }

    void clearPortList() {
        jCBCOMPort.removeAllItems();
    }

    private void findeModulNr() {
        try {
            modulNr = Integer.parseInt(jCBWeichenChefAuswahl.getSelectedItem().toString());
        } catch (IllegalFormatConversionException conversionException) {
            System.out.println("Konvertierung fehlgeschlagen");
            modulNr = 4;
        }
    }

    public void setzeGeschwindigkeit(int empfangeneGeschwindigkeit) {
        jSGeschwindigkeit.setValue(empfangeneGeschwindigkeit);
    }

    /* Richtungswechsel ist nicht vorgesehen    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            //Windows-Design verwenden
//            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAktualisieren;
    private javax.swing.JButton jBAutomatikStarten;
    private javax.swing.JButton jBBeenden;
    private javax.swing.JButton jBOeffnen;
    private javax.swing.JButton jBRMKabfragen;
    private javax.swing.JButton jBRichtungAendern;
    private javax.swing.JButton jBSperreWeg;
    private javax.swing.JButton jBStopp;
    private javax.swing.JButton jBTestAllNondes;
    private javax.swing.JButton jBTestOneWay;
    private javax.swing.JButton jBTrennen;
    private javax.swing.JButton jBWeiche1Gerade;
    private javax.swing.JButton jBWeiche1Position;
    private javax.swing.JButton jBWeiche1Rund;
    private javax.swing.JButton jBWeiche2Gerade;
    private javax.swing.JButton jBWeiche2Position;
    private javax.swing.JButton jBWeiche2Rund;
    private javax.swing.JButton jBWeiche3Gerade;
    private javax.swing.JButton jBWeiche3Position;
    private javax.swing.JButton jBWeiche3Rund;
    private javax.swing.JButton jBWeiche4Gerade;
    private javax.swing.JButton jBWeiche4Position;
    private javax.swing.JButton jBWeiche4Rund;
    private javax.swing.JButton jBWeicheGerade;
    private javax.swing.JButton jBWeicheRund;
    private javax.swing.JButton jBWeichenPosition;
    private javax.swing.JComboBox jCBCOMPort;
    private javax.swing.JComboBox jCBRMKModulAuswahl;
    private javax.swing.JComboBox jCBWeichenChefAuswahl;
    private javax.swing.JLabel jLAdresse;
    private javax.swing.JLabel jLCOMPort;
    private javax.swing.JLabel jLEingang;
    private javax.swing.JLabel jLEingang1;
    private javax.swing.JLabel jLEingang2;
    private javax.swing.JLabel jLEingang3;
    private javax.swing.JLabel jLEingang4;
    private javax.swing.JLabel jLEingang5;
    private javax.swing.JLabel jLEingang6;
    private javax.swing.JLabel jLEingang7;
    private javax.swing.JLabel jLEingang8;
    private javax.swing.JLabel jLRMK;
    private javax.swing.JLabel jLRMKModulAuswahl;
    private javax.swing.JLabel jLStatus;
    private javax.swing.JLabel jLStreckeWaehlen;
    private javax.swing.JLabel jLVon;
    private javax.swing.JLabel jLWeiche1;
    private javax.swing.JLabel jLWeiche2;
    private javax.swing.JLabel jLWeiche3;
    private javax.swing.JLabel jLWeiche4;
    private javax.swing.JLabel jLWeichen;
    private javax.swing.JLabel jLWeichenModulAuswahl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPBeenden;
    private javax.swing.JPanel jPCOMPort;
    private javax.swing.JPanel jPFahrAutomatik;
    private javax.swing.JPanel jPLok;
    private javax.swing.JPanel jPRMK;
    private javax.swing.JPanel jPRegler;
    private javax.swing.JPanel jPSteuern;
    private javax.swing.JPanel jPWeiche;
    private javax.swing.JSpinner jSAdresse;
    private javax.swing.JSlider jSGeschwindigkeit;
    private javax.swing.JToggleButton jTBSteuern;
    private javax.swing.JTextField jTFBis;
    private javax.swing.JTextField jTFStatus0;
    private javax.swing.JTextField jTFStatus1;
    private javax.swing.JTextField jTFStatus2;
    private javax.swing.JTextField jTFStatus3;
    private javax.swing.JTextField jTFStatus4;
    private javax.swing.JTextField jTFStatus5;
    private javax.swing.JTextField jTFStatus6;
    private javax.swing.JTextField jTFStatus7;
    private javax.swing.JTextField jTFVon;
    private javax.swing.JToggleButton jTGLokLichtFunktion;
    // End of variables declaration//GEN-END:variables
}
